/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlDownloadSpeed.java
 *
 * Created on Jan 9, 2012, 4:38:05 PM
 */
package neembuu.vfs.progresscontrol;

import info.monitorenter.gui.chart.Chart2D;
import info.monitorenter.gui.chart.ITrace2D;
import info.monitorenter.gui.chart.traces.Trace2DLtd;
import java.awt.BorderLayout;
import java.awt.Color;

/**
 *
 * @author Shashank Tulsyan
 */
public class ControlThrottle extends javax.swing.JFrame {
    final ITrace2D trace;
    final GeneralThrottleTestMeasurement gttm;
    /** Creates new form ControlDownloadSpeed */
    public ControlThrottle(GeneralThrottleTestMeasurement gttm) {
        // Create a chart:  
        this.gttm = gttm;
        
        Chart2D chart = new Chart2D();
        // Create an ITrace: 
        // Note that dynamic charts need limited amount of values!!! 
        trace = new Trace2DLtd(2000); 
        trace.setColor(Color.RED);

        // Add the trace to the chart. This has to be done before adding points (deadlock prevention): 
        chart.addTrace(trace);
        
        initComponents();
        
        downloadSpeedSlider.setValue((int)(gttm.requestSpeed_Bps/1024));
        speedGraph.add(chart,BorderLayout.CENTER);
        downloadSpeedLabel.setText(downloadSpeedSlider.getValue()+" KBps");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        downloadSpeedSlider = new javax.swing.JSlider();
        speedGraph = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        downloadSpeedLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        smallDownloadSpeedLabel = new javax.swing.JLabel();
        throttleEnabled = new javax.swing.JToggleButton();
        takeAverageFromNow = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        averageSpeed = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        a_value = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        directionLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        downloadSpeedSlider.setMaximum(4000);
        downloadSpeedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                downloadSpeedSliderStateChanged(evt);
            }
        });

        speedGraph.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Target Download speed :");

        downloadSpeedLabel.setText("KBps");

        jLabel3.setText("Download Speed (small average) :");

        smallDownloadSpeedLabel.setText("KBps");

        throttleEnabled.setText("Enable/Disable Throttle");
        throttleEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                throttleEnabledActionPerformed(evt);
            }
        });

        takeAverageFromNow.setText("Take Average from now");
        takeAverageFromNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeAverageFromNowActionPerformed(evt);
            }
        });

        jLabel2.setText("Average : ");

        averageSpeed.setText("KBps");

        jLabel4.setText("Adjustment % ");

        a_value.setText("0");

        jLabel5.setText("Direction : ");

        directionLable.setText("under throttle");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(speedGraph, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(downloadSpeedSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(downloadSpeedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(smallDownloadSpeedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                    .addComponent(throttleEnabled, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(takeAverageFromNow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(averageSpeed))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a_value, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(directionLable, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(downloadSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(downloadSpeedLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(smallDownloadSpeedLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(throttleEnabled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(takeAverageFromNow)
                    .addComponent(jLabel2)
                    .addComponent(averageSpeed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(a_value)
                    .addComponent(jLabel5)
                    .addComponent(directionLable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speedGraph, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void downloadSpeedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_downloadSpeedSliderStateChanged
// TODO add your handling code here:
    if(!downloadSpeedSlider.getValueIsAdjusting()){
        long reqDownSpeed = downloadSpeedSlider.getValue() * 1024;
        downloadSpeedLabel.setText(downloadSpeedSlider.getValue()+" KBps");
        
        gttm.requestSpeed_Bps = reqDownSpeed;
        gttm.calculateSleepInterval();
    }
}//GEN-LAST:event_downloadSpeedSliderStateChanged

private void throttleEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_throttleEnabledActionPerformed
// TODO add your handling code here:
    gttm.throttleEnabled = !gttm.throttleEnabled;
}//GEN-LAST:event_throttleEnabledActionPerformed

private void takeAverageFromNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeAverageFromNowActionPerformed
// TODO add your handling code here:
    gttm.downloadSpeedObv.setThisAsInitialPointForAverage();
}//GEN-LAST:event_takeAverageFromNowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlThrottle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlThrottle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlThrottle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlThrottle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ControlThrottle(null).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JLabel a_value;
    javax.swing.JLabel averageSpeed;
    javax.swing.JLabel directionLable;
    private javax.swing.JLabel downloadSpeedLabel;
    private javax.swing.JSlider downloadSpeedSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    javax.swing.JLabel smallDownloadSpeedLabel;
    private javax.swing.JPanel speedGraph;
    private javax.swing.JButton takeAverageFromNow;
    private javax.swing.JToggleButton throttleEnabled;
    // End of variables declaration//GEN-END:variables
}
